---
export const prerender = false;

import { validateStoken } from '@/lib/Actions';
const payload = validateStoken(Astro.cookies.get('portals:stoken')?.value);
const { id } = Astro.params;
if (!payload || !id) return Astro.redirect('/');

import HomeLayout from '@/layouts/HomeLayout.astro';
import PathAnchor from '@/components/PathAnchor.astro';
import { BACKEND_URL } from '@/public.env';
import { GetServerChannels } from '@/lib/APIcalls';
const { server, channels } = await GetServerChannels(
	BACKEND_URL,
	JSON.stringify(payload),
	id
);
const isSuper = server.super?.toString() === payload.user._id.toString();
---

<HomeLayout payload={payload}>
	<div slot="nav" id="nav">
        <h3>Channels</h3>
        <ul>
            {
                channels.map((chan) => {
                    const is = {
                        'text': '/text.svg',
                        'voice':'/micOn.svg',
                        'video':'/video.svg'
                    };
                    return(
                        <PathAnchor text={chan.name.toString()} href={`/servers/${id}/${chan._id.toString()}`}>
                            <img src={is[chan.is] || '/dots.svg'} width="20" height="20" alt="">
                        </PathAnchor>
                    );
                })
            }
			{
				isSuper
				?
				<PathAnchor text='Add channel' href={`/add/channel/${id}`}>
					<img src="/add.svg" width="20" height="20" alt="">
				</PathAnchor>
				: ''
			}
        </ul>
    </div>
	<div slot="path" id="path">
		<PathAnchor text="Servers" href="/servers">
			<img src="/group.svg" width="20" height="20" alt="" />
		</PathAnchor>
		<img src="/pac.svg" width="15" height="15" alt="" />
		<PathAnchor text={server.name.toString()}>
			<img src="/global.svg" width="20" height="20" alt="" />
		</PathAnchor>
	</div>
	<div slot="main" id="main">
		<header>
			<h3>Welcome to</h3>
			<PathAnchor text={server.name.toString()}>
				<img src="/global.svg" width="20" height="20" alt="" />
			</PathAnchor>
		</header>
		<p>{server.description}</p>
	</div>
</HomeLayout>

<style lang="scss">
	#path {
		display: flex;
		align-items: center;

		gap: 10px;
	}

	#main {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;

		height: 100%;
		width: 100%;

		& header {
			display: flex;
			align-items: center;
			gap: 1rem;
		}

		& p {
			max-width: 50%;
		}
	}

	#nav {
		display: grid;
		grid-template-rows: 3rem 1fr;
		place-items: center;

		height: 100%;
		width: 100%;

		letter-spacing: 0.1rem;

        & ul{
            height: 100%;
            width: 100%;
        }
	}
</style>
